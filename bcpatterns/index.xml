<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BC Patterns on AL Guidelines</title><link>https://alguidelines.dev/bcpatterns/</link><description>Recent content in BC Patterns on AL Guidelines</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://alguidelines.dev/bcpatterns/index.xml" rel="self" type="application/rss+xml"/><item><title>Generic Method Pattern</title><link>https://alguidelines.dev/bcpatterns/generic-method-pattern/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://alguidelines.dev/bcpatterns/generic-method-pattern/</guid><description>Created by Gary Winter (Cloud Ready Software), Described by waldo (iFacto Business Solutions | Dynex)
Abstract The goal of this pattern is to facilitate a lot of things in one single awesome way of writing code. If you apply this pattern as a general pattern, you&amp;rsquo;ll implement:
Extensibility Decoupling Readability Testability Encapsulation Context: Whenever you have to write an isolated piece of business logic, this pattern should be applicable.</description></item></channel></rss>